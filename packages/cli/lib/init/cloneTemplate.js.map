{"version":3,"sources":["../../src/init/cloneTemplate.js"],"names":["repo","branchName","spinner","start","chalk","yellow","tmpdir","path","join","os","fs","remove","Promise","resolve","reject","checkout","err","stop","logger","done","error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;eAKe,OAAOA,IAAP,EAAaC,UAAb,KAA4B;AACzCC,oBAAQC,KAAR,CAAc,GAAd,EAAoB,QAAOC,gBAAMC,MAAN,CAAc,GAAEL,IAAK,IAAGC,UAAW,GAAnC,CAAuC,KAAlE;;AACA,QAAMK,MAAM,GAAGC,cAAKC,IAAL,CAAUC,YAAGH,MAAH,EAAV,EAAuB,MAAvB,CAAf;;AACA,QAAMI,aAAGC,MAAH,CAAUL,MAAV,CAAN;AACA;AACA,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,2BAASd,IAAT,EAAeM,MAAf,EAAuB;AAAES,MAAAA,QAAQ,EAAEd;AAAZ,KAAvB,EAAkDe,GAAD,IAAS;AACxDd,wBAAQe,IAAR;;AACA,UAAI,CAACD,GAAL,EAAU;AACRE,yBAAOC,IAAP,CAAa,QAAQ,GAAEnB,IAAK,IAAGC,UAAW,GAAG,KAA7C;;AACA,eAAOY,OAAO,CAACP,MAAD,CAAd;AACD,OAHD,MAGO;AACLY,yBAAOE,KAAP,CAAc,QAAQ,GAAEpB,IAAK,IAAGC,UAAW,GAAG,KAA9C;;AACA,eAAOa,MAAM,CAACE,GAAD,CAAb;AACD;AACF,KATD;AAUD,GAXM,CAAP;AAYD,C","sourcesContent":["import os from 'os';\nimport path from 'path';\nimport gitclone from 'git-clone';\nimport { fs, chalk, logger, spinner } from '@chrissong/cli-utils';\n\n/**克隆模版到临时文件夹\n * @param{string} repo      git地址\n * @param{string} branchName    分支名称\n * */\n\nexport default async (repo, branchName) => {\n  spinner.start('✨', `克隆模板 ${chalk.yellow(`${repo}(${branchName})`)}...`);\n  const tmpdir = path.join(os.tmpdir(), 'easy');\n  await fs.remove(tmpdir);\n  debugger;\n  return new Promise((resolve, reject) => {\n    gitclone(repo, tmpdir, { checkout: branchName }, (err) => {\n      spinner.stop();\n      if (!err) {\n        logger.done(`克隆模板 ${`${repo}(${branchName})`} 成功`);\n        return resolve(tmpdir);\n      } else {\n        logger.error(`克隆模板 ${`${repo}(${branchName})`} 失败`);\n        return reject(err);\n      }\n    });\n  });\n};\n"],"file":"cloneTemplate.js"}