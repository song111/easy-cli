{"version":3,"sources":["../../src/init/install.js"],"names":["pkgManager","targetDir","args","cmd","join","logger","log","chalk","cyan","Promise","resolve","reject","child","cwd","stdio","stderr","on","buf","str","toString","test","progressBarMatch","match","renderProgressBar","process","write","code","curr","total","ratio","Math","min","max","bar","availableSpace","columns","length","width","completeLength","round","complete","repeat","incomplete","toStartOfLine","stream","supportsColor","readline","cursorTo"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;eAKe,OAAOA,UAAP,EAAmBC,SAAnB,KAAiC;AAC9C,QAAMC,IAAI,GAAGF,UAAU,KAAK,KAAf,GAAuB,CAAC,SAAD,EAAY,YAAZ,EAA0B,OAA1B,CAAvB,GAA4D,CAAC,SAAD,CAAzE;AACA,QAAMG,GAAG,GAAI,GAAEH,UAAW,IAAGE,IAAI,CAACE,IAAL,CAAU,GAAV,CAAe,EAA5C;;AACAC,mBAAOC,GAAP,CAAY,cAAaC,gBAAMC,IAAN,CAAWL,GAAX,CAAgB,SAAzC;;AAEA,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,KAAK,GAAG,qBAAMZ,UAAN,EAAkBE,IAAlB,EAAwB;AACpCW,MAAAA,GAAG,EAAEZ,SAD+B;AAEpCa,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,MAAvB;AAF6B,KAAxB,CAAd;;AAIA,QAAId,UAAU,KAAK,MAAnB,EAA2B;AACzBY,MAAAA,KAAK,CAACG,MAAN,CAAaC,EAAb,CAAgB,MAAhB,EAAyBC,GAAD,IAAS;AAC/B,cAAMC,GAAG,GAAGD,GAAG,CAACE,QAAJ,EAAZ;AAEA,YAAI,UAAUC,IAAV,CAAeF,GAAf,CAAJ,EAAyB;AAEzB,cAAMG,gBAAgB,GAAGH,GAAG,CAACI,KAAJ,CAAU,qBAAV,CAAzB;;AACA,YAAID,gBAAJ,EAAsB;AACpB;AACA;AACAE,UAAAA,iBAAiB,CAACF,gBAAgB,CAAC,CAAD,CAAjB,EAAsBA,gBAAgB,CAAC,CAAD,CAAtC,CAAjB;AACA;AACD;;AAEDG,QAAAA,OAAO,CAACT,MAAR,CAAeU,KAAf,CAAqBR,GAArB;AACD,OAdD;AAeD;;AAEDL,IAAAA,KAAK,CAACI,EAAN,CAAS,OAAT,EAAmBU,IAAD,IAAU;AAC1B,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACd;AACAf,QAAAA,MAAM,CAAE,sBAAqBX,UAAW,IAAGE,IAAI,CAACE,IAAL,CAAU,GAAV,CAAe,EAApD,CAAN;AACA;AACD;;AACDM,MAAAA,OAAO;AACR,KAPD;AAQD,GA/BM,CAAP;AAgCD,C,EAED;;;;;AACA,SAASa,iBAAT,CAA4BI,IAA5B,EAAkCC,KAAlC,EAAyC;AACvC,QAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASL,IAAI,GAAGC,KAAhB,EAAuB,CAAvB,CAAT,EAAoC,CAApC,CAAd;AACA,QAAMK,GAAG,GAAI,IAAGN,IAAK,IAAGC,KAAM,EAA9B;AACA,QAAMM,cAAc,GAAGJ,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYR,OAAO,CAACT,MAAR,CAAeoB,OAAf,GAAyBF,GAAG,CAACG,MAA7B,GAAsC,CAAlD,CAAvB;AACA,QAAMC,KAAK,GAAGP,IAAI,CAACC,GAAL,CAASH,KAAT,EAAgBM,cAAhB,CAAd;AACA,QAAMI,cAAc,GAAGR,IAAI,CAACS,KAAL,CAAWF,KAAK,GAAGR,KAAnB,CAAvB;AACA,QAAMW,QAAQ,GAAG,IAAIC,MAAJ,CAAWH,cAAX,CAAjB;AACA,QAAMI,UAAU,GAAG,IAAID,MAAJ,CAAWJ,KAAK,GAAGC,cAAnB,CAAnB;AACAK,EAAAA,aAAa,CAACnB,OAAO,CAACT,MAAT,CAAb;AACAS,EAAAA,OAAO,CAACT,MAAR,CAAeU,KAAf,CAAsB,IAAGe,QAAS,GAAEE,UAAW,IAAGT,GAAI,EAAtD;AACD;;AAED,SAASU,aAAT,CAAwBC,MAAxB,EAAgC;AAC9B,MAAI,CAACrC,gBAAMsC,aAAX,EAA0B;AACxBD,IAAAA,MAAM,CAACnB,KAAP,CAAa,IAAb;AACA;AACD;;AACDqB,oBAASC,QAAT,CAAkBH,MAAlB,EAA0B,CAA1B;AACD","sourcesContent":["import { logger, chalk, execa } from '@chrissong/cli-utils';\nimport readline from 'readline';\n\n/**\n * 安装依赖\n * @param{string} pkgManager yarn|npm\n * @param{string} targetDir  项目路径\n */\nexport default async (pkgManager, targetDir) => {\n  const args = pkgManager === 'npm' ? ['install', '--loglevel', 'error'] : ['install'];\n  const cmd = `${pkgManager} ${args.join(' ')}`;\n  logger.log(`🚀  安装项目依赖 ${chalk.cyan(cmd)}，请稍等...`);\n\n  return new Promise((resolve, reject) => {\n    const child = execa(pkgManager, args, {\n      cwd: targetDir,\n      stdio: ['inherit', 'inherit', 'pipe']\n    });\n    if (pkgManager === 'yarn') {\n      child.stderr.on('data', (buf) => {\n        const str = buf.toString();\n\n        if (/warning/.test(str)) return;\n\n        const progressBarMatch = str.match(/\\[.*\\] (\\d+)\\/(\\d+)/);\n        if (progressBarMatch) {\n          // since yarn is in a child process, it's unable to get the width of\n          // the terminal. reimplement the progress bar ourselves!\n          renderProgressBar(progressBarMatch[1], progressBarMatch[2]);\n          return;\n        }\n\n        process.stderr.write(buf);\n      });\n    }\n\n    child.on('close', (code) => {\n      if (code !== 0) {\n        // eslint-disable-next-line prefer-promise-reject-errors\n        reject(`pkgManager failed: ${pkgManager} ${args.join(' ')}`);\n        return;\n      }\n      resolve();\n    });\n  });\n};\n\n// 进度读取来自于 vue-cli\nfunction renderProgressBar (curr, total) {\n  const ratio = Math.min(Math.max(curr / total, 0), 1);\n  const bar = ` ${curr}/${total}`;\n  const availableSpace = Math.max(0, process.stderr.columns - bar.length - 3);\n  const width = Math.min(total, availableSpace);\n  const completeLength = Math.round(width * ratio);\n  const complete = '#'.repeat(completeLength);\n  const incomplete = '-'.repeat(width - completeLength);\n  toStartOfLine(process.stderr);\n  process.stderr.write(`[${complete}${incomplete}]${bar}`);\n}\n\nfunction toStartOfLine (stream) {\n  if (!chalk.supportsColor) {\n    stream.write('\\r');\n    return;\n  }\n  readline.cursorTo(stream, 0);\n}\n"],"file":"install.js"}