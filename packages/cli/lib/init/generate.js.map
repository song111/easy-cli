{"version":3,"sources":["../../src/init/generate.js"],"names":["template","projectName","targetDir","spinner","start","chalk","yellow","name","pkgPath","path","resolve","pkgJson","fs","readJson","writeJson","spaces","ensureDir","Promise","all","readdirSync","map","file","move","join","overwrite","stop"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;eAMe,OAAOA,QAAP,EAAiBC,WAAjB,EAA8BC,SAA9B,KAA4C;AACzDC,oBAAQC,KAAR,CAAc,IAAd,EAAqB,QAAOC,gBAAMC,MAAN,CAAaC,IAAb,CAAmB,KAA/C;;AACA,QAAMC,OAAO,GAAGC,cAAKC,OAAL,CAAaV,QAAb,EAAuB,gBAAvB,CAAhB;;AACA,QAAMW,OAAO,GAAG,MAAMC,aAAGC,QAAH,CAAYL,OAAZ,CAAtB;AACAG,EAAAA,OAAO,CAACJ,IAAR,GAAeN,WAAf;AACA,QAAMW,aAAGE,SAAH,CAAaN,OAAb,EAAsBG,OAAtB,EAA+B;AAAEI,IAAAA,MAAM,EAAE;AAAV,GAA/B,CAAN;AACA,QAAMH,aAAGI,SAAH,CAAad,SAAb,CAAN,CANyD,CAM1B;;AAE/B,QAAMe,OAAO,CAACC,GAAR,CACJN,aAAGO,WAAH,CAAenB,QAAf,EAAyBoB,GAAzB,CAA8BC,IAAD,IAAU;AACrC,WAAOT,aAAGU,IAAH,CAAQb,cAAKc,IAAL,CAAUvB,QAAV,EAAoBqB,IAApB,CAAR,EAAmCZ,cAAKc,IAAL,CAAUrB,SAAV,EAAqBmB,IAArB,CAAnC,EAA+D;AACpEG,MAAAA,SAAS,EAAE;AADyD,KAA/D,CAAP;AAGD,GAJD,CADI,CAAN;;AAOArB,oBAAQsB,IAAR;AACD,C","sourcesContent":["import path from 'path';\nimport { fs, chalk, spinner } from '@chrissong/cli-utils';\n\n/**\n * 根据模版生成项目文件\n * @param{string} template    模版临时路径\n * @param{string} projectName 项目名称\n * @param{string} targetDir   项目文件路径\n */\nexport default async (template, projectName, targetDir) => {\n  spinner.start('📦', `生成项目 ${chalk.yellow(name)}...`);\n  const pkgPath = path.resolve(template, './package.json');\n  const pkgJson = await fs.readJson(pkgPath);\n  pkgJson.name = projectName;\n  await fs.writeJson(pkgPath, pkgJson, { spaces: 2 });\n  await fs.ensureDir(targetDir); //创建本地项目\n\n  await Promise.all(\n    fs.readdirSync(template).map((file) => {\n      return fs.move(path.join(template, file), path.join(targetDir, file), {\n        overwrite: true\n      });\n    })\n  );\n  spinner.stop();\n};\n"],"file":"generate.js"}