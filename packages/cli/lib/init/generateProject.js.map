{"version":3,"sources":["../../src/init/generateProject.js"],"names":["template","projectName","targetDir","spinner","start","chalk","yellow","pkgPath","path","resolve","pkgJson","fs","readJson","name","writeJson","spaces","ensureDir","Promise","all","readdirSync","map","file","move","join","overwrite","stop"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;eAMe,OAAOA,QAAP,EAAiBC,WAAjB,EAA8BC,SAA9B,KAA4C;AACzDC,oBAAQC,KAAR,CAAc,IAAd,EAAqB,QAAOC,gBAAMC,MAAN,CAAaL,WAAb,CAA0B,KAAtD;;AACA,QAAMM,OAAO,GAAGC,cAAKC,OAAL,CAAaT,QAAb,EAAuB,gBAAvB,CAAhB;;AACA,QAAMU,OAAO,GAAG,MAAMC,aAAGC,QAAH,CAAYL,OAAZ,CAAtB;AACAG,EAAAA,OAAO,CAACG,IAAR,GAAeZ,WAAf;AACA,QAAMU,aAAGG,SAAH,CAAaP,OAAb,EAAsBG,OAAtB,EAA+B;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAA/B,CAAN;AACA,QAAMJ,aAAGK,SAAH,CAAad,SAAb,CAAN,CANyD,CAM1B;;AAE/B,QAAMe,OAAO,CAACC,GAAR,CACJP,aAAGQ,WAAH,CAAenB,QAAf,EAAyBoB,GAAzB,CAA8BC,IAAD,IAAU;AACrC,WAAOV,aAAGW,IAAH,CAAQd,cAAKe,IAAL,CAAUvB,QAAV,EAAoBqB,IAApB,CAAR,EAAmCb,cAAKe,IAAL,CAAUrB,SAAV,EAAqBmB,IAArB,CAAnC,EAA+D;AACpEG,MAAAA,SAAS,EAAE;AADyD,KAA/D,CAAP;AAGD,GAJD,CADI,CAAN;;AAOArB,oBAAQsB,IAAR;AACD,C","sourcesContent":["import path from 'path';\r\nimport { fs, chalk, spinner } from '@chrissong/cli-utils';\r\n\r\n/**\r\n * 根据模版生成项目文件\r\n * @param{string} template    模版临时路径\r\n * @param{string} projectName 项目名称\r\n * @param{string} targetDir   项目文件路径\r\n */\r\nexport default async (template, projectName, targetDir) => {\r\n  spinner.start('📦', `生成项目 ${chalk.yellow(projectName)}...`);\r\n  const pkgPath = path.resolve(template, './package.json');\r\n  const pkgJson = await fs.readJson(pkgPath);\r\n  pkgJson.name = projectName;\r\n  await fs.writeJson(pkgPath, pkgJson, { spaces: 2 });\r\n  await fs.ensureDir(targetDir); //创建本地项目\r\n\r\n  await Promise.all(\r\n    fs.readdirSync(template).map((file) => {\r\n      return fs.move(path.join(template, file), path.join(targetDir, file), {\r\n        overwrite: true\r\n      });\r\n    })\r\n  );\r\n  spinner.stop();\r\n};\r\n"],"file":"generateProject.js"}