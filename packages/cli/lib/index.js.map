{"version":3,"sources":["../src/index.js"],"names":["Cli","constructor","cwd","argv","plugins","init","commands","root","env","getEnv","pkg","resolvePackages","forEach","plugin","use","version","Object","keys","process","reduce","key","path","resolve","fs","existsSync","require","err","logger","error","register","cmd","desc","args","name","split","test","Error","chalk","redBright","yargs","command","parse","length","showHelp"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEe,MAAMA,GAAN,CAAU;AACvBC,EAAAA,WAAW,CAACC,GAAD,EAAMC,IAAI,GAAG,EAAb,EAAiB;AAC1B,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAe,CAACC,aAAD,CAAf;AACA,SAAKC,QAAL,GAAgB,EAAhB,CAJ0B,CAIN;;AACpB,SAAKD,IAAL;AACD,GAPsB,CASvB;;;AACAA,EAAAA,IAAI,GAAG;AACL,SAAKE,IAAL,GAAY,wBAAS,KAAKL,GAAd,CAAZ;AACA,SAAKM,GAAL,GAAW,KAAKC,MAAL,EAAX;AACA,SAAKC,GAAL,GAAW,KAAKC,eAAL,EAAX;AACA,SAAKP,OAAL,CAAaQ,OAAb,CAAsBC,MAAD,IAAY,KAAKC,GAAL,CAASD,MAAT,CAAjC;AACD;AAED;;;;;AAIA,MAAIE,OAAJ,GAAc;AACZ,WAAO,KAAKL,GAAL,CAASK,OAAhB;AACD;AAED;;;;;AAGAN,EAAAA,MAAM,GAAG;AACP,WAAOO,MAAM,CAACC,IAAP,CAAYC,OAAO,CAACV,GAApB,EAAyBW,MAAzB,CAAgC,CAACX,GAAD,EAAMY,GAAN,KAAc;AACnDZ,MAAAA,GAAG,CAACY,GAAD,CAAH,GAAWF,OAAO,CAACV,GAAR,CAAYY,GAAZ,CAAX;AACA,aAAOZ,GAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID;AAED;;;;;;AAKAM,EAAAA,GAAG,CAACD,MAAD,EAAS;AACVA,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD;AAED;;;;;AAGAF,EAAAA,eAAe,GAAG;AAChB,UAAMD,GAAG,GAAGW,cAAKC,OAAL,CAAa,KAAKf,IAAlB,EAAwB,cAAxB,CAAZ;;AACA,QAAI,CAACgB,YAAGC,UAAH,CAAcd,GAAd,CAAL,EAAyB,OAAO,EAAP;;AACzB,QAAI;AACF,aAAOe,OAAO,CAACf,GAAD,CAAd;AACD,KAFD,CAEE,OAAOgB,GAAP,EAAY;AACZC,uBAAOC,KAAP,CAAc,KAAIlB,GAAI,KAAtB;;AACA,aAAO,EAAP;AACD;AACF;AAED;;;;;;;;AAMAmB,EAAAA,QAAQ,CAACC,GAAD,EAAMC,IAAN,EAAY,GAAGC,IAAf,EAAqB;AAC3B,UAAMC,IAAI,GAAGH,GAAG,CAACI,KAAJ,CAAU,KAAV,EAAiB,CAAjB,CAAb;;AAEA,QAAI,CAAC,WAAWC,IAAX,CAAgBF,IAAhB,CAAL,EAA4B;AAC1B;AACA,YAAM,IAAIG,KAAJ,CAAW,QAAOC,gBAAMC,SAAN,CAAgBL,IAAhB,CAAsB,sBAAxC,CAAN;AACD;;AAED,QAAI,CAACF,IAAL,EAAW,MAAM,IAAIK,KAAJ,CAAU,eAAV,CAAN;AACX,QAAI,KAAK9B,QAAL,CAAc2B,IAAd,CAAJ,EAAyB,MAAM,IAAIG,KAAJ,CAAW,MAAKC,gBAAMC,SAAN,CAAgBL,IAAhB,CAAsB,QAAtC,CAAN;AACzB,SAAK3B,QAAL,CAAc2B,IAAd;AAAwBH,MAAAA,GAAxB;AAA6BC,MAAAA;AAA7B,OAAsCC,IAAtC;;AACAO,mBAAMC,OAAN,CAAcV,GAAd,EAAmBC,IAAnB,EAAyB,GAAGC,IAA5B;AACD;AAED;;;;;;AAIAS,EAAAA,KAAK,CAACtC,IAAD,EAAO;AACV,SAAKA,IAAL,GAAYA,IAAZ;;AACA,QAAI,KAAKA,IAAL,CAAUuC,MAAd,EAAsB;AACpBH,qBAAME,KAAN,CAAY,KAAKtC,IAAjB;AACD,KAFD,MAEO;AACLoC,qBAAMI,QAAN;AACD;AACF;;AAzFsB","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport yargs from 'yargs';\nimport { logger, findRoot, chalk } from '@chrissong/cli-utils';\nimport init from './init';\n\nexport default class Cli {\n  constructor(cwd, argv = []) {\n    this.cwd = cwd;\n    this.argv = argv;\n    this.plugins = [init];\n    this.commands = {}; // 命令集合\n    this.init();\n  }\n\n  // 初始化\n  init() {\n    this.root = findRoot(this.cwd);\n    this.env = this.getEnv();\n    this.pkg = this.resolvePackages();\n    this.plugins.forEach((plugin) => this.use(plugin));\n  }\n\n  /**\n   * 版本信息\n   */\n\n  get version() {\n    return this.pkg.version;\n  }\n\n  /**\n   * 获取当前环境的环境变量\n   */\n  getEnv() {\n    return Object.keys(process.env).reduce((env, key) => {\n      env[key] = process.env[key];\n      return env;\n    }, {});\n  }\n\n  /**\n   * 使用插件 注入cli 实例\n   * @param {Function} plugin\n   */\n\n  use(plugin) {\n    plugin(this);\n  }\n\n  /**\n   * 获取package.json信息\n   */\n  resolvePackages() {\n    const pkg = path.resolve(this.root, 'package.json');\n    if (!fs.existsSync(pkg)) return {};\n    try {\n      return require(pkg);\n    } catch (err) {\n      logger.error(`读取${pkg}失败！`);\n      return {};\n    }\n  }\n\n  /**\n   * 注册命令\n   * @param {String} cmd\n   * @param {String} desc\n   * @param  {...any} args\n   */\n  register(cmd, desc, ...args) {\n    const name = cmd.split(/\\s+/)[0];\n\n    if (!/^[\\w:]+$/.test(name)) {\n      // 只能有数字、字母、下划线、冒号组成\n      throw new Error(`命令名称 ${chalk.redBright(name)} 不合法，只能是字母、数字、下划线、冒号`);\n    }\n\n    if (!desc) throw new Error('命令描述 desc 不存在');\n    if (this.commands[name]) throw new Error(`命令 ${chalk.redBright(name)} 已经被占用`);\n    this.commands[name] = { cmd, desc, ...args };\n    yargs.command(cmd, desc, ...args);\n  }\n\n  /**\n   * 解析命令行参数\n   * @param {Array} argv\n   */\n  parse(argv) {\n    this.argv = argv;\n    if (this.argv.length) {\n      yargs.parse(this.argv);\n    } else {\n      yargs.showHelp();\n    }\n  }\n}\n"],"file":"index.js"}