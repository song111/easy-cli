{"version":3,"sources":["../../src/webpack/webpack.config.prod.js"],"names":["api","mode","chainWebpack","config","easyConfig","pages","argv","sourcemap","report","isProd","extract","sourceMap","filename","chunkFilename","publicPath","watch","devtool","output","performance","merge","hints","optimization","minimize","minimizer","use","TerserPlugin","terserOptions","parse","ecma","compress","warnings","comparisons","inline","mangle","safari10","comments","ascii_only","parallel","isWsl","cache","OptimizeCSSAssetsPlugin","cssProcessorOptions","parser","postcssSafeParser","map","annotation","plugin","NamedChunksPlugin","chunk","name","Array","from","modulesIterable","m","id","join","when","BundleAnalyzerPlugin","logLevel","analyzerMode","reportFilename"],"mappings":"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","sourcesContent":["/* eslint-disable indent */\nimport isWsl from 'is-wsl';\nimport hash from 'hash-sum';\nimport { NamedChunksPlugin } from 'webpack';\nimport TerserPlugin from 'terser-webpack-plugin';\nimport CopyWebpackPlugin from 'copy-webpack-plugin'\nimport postcssSafeParser from 'postcss-safe-parser';\nimport { BundleAnalyzerPlugin } from 'webpack-bundle-analyzer';\nimport PreloadWebpackPlugin from 'preload-webpack-plugin'\nimport OptimizeCSSAssetsPlugin from 'optimize-css-assets-webpack-plugin';\nimport cssLoader from './cssLoader';\n\nexport default (api) => {\n  if (api.mode() !== 'production') return;\n\n  api.chainWebpack((config) => {\n    const {  pages = {} } = api.easyConfig()\n    const { sourcemap, report } = api.argv();\n\n    cssLoader(config, {\n      isProd: false,\n      extract: true,\n      sourceMap: sourcemap,\n      filename: 'static/css/[name].[contenthash:8].css',\n      chunkFilename: 'static/css/[id].[contenthash:8].css',\n      publicPath: '../../'\n    });\n\n    /**\n     * 配置模式与devtool\n     * 输出文件名设置\n     */\n    config\n      .watch(false)\n      .mode('production')\n      .devtool(sourcemap ? 'source-map' : false)\n      .output.filename('static/js/[name].[contenthash:8].js')\n      .chunkFilename('static/js/[name].[contenthash:8].js');\n\n    /**\n     * 不输出优化提示\n     */\n    config.performance.merge({\n      hints: false\n    });\n\n    /**\n     * 设置压缩代码\n     */\n    config.optimization.minimize(true);\n\n    /**\n     * 压缩js\n     */\n    config.optimization.minimizer('terser').use(TerserPlugin, [\n      {\n        terserOptions: {\n          parse: {\n            // we want terser to parse ecma 8 code. However, we don't want it\n            // to apply any minfication steps that turns valid ecma 5 code\n            // into invalid ecma 5 code. This is why the 'compress' and 'output'\n            // sections only apply transformations that are ecma 5 safe\n            // https://github.com/facebook/create-react-app/pull/4234\n            ecma: 8\n          },\n          compress: {\n            ecma: 5,\n            warnings: false,\n            // Disabled because of an issue with Uglify breaking seemingly valid code:\n            // https://github.com/facebook/create-react-app/issues/2376\n            // Pending further investigation:\n            // https://github.com/mishoo/UglifyJS2/issues/2011\n            comparisons: false,\n            // Disabled because of an issue with Terser breaking valid code:\n            // https://github.com/facebook/create-react-app/issues/5250\n            // Pending futher investigation:\n            // https://github.com/terser-js/terser/issues/120\n            inline: 2\n          },\n          mangle: {\n            safari10: true\n          },\n          output: {\n            ecma: 5,\n            comments: false,\n            // Turned on because emoji and regex is not minified properly using default\n            // https://github.com/facebook/create-react-app/issues/2488\n            ascii_only: true\n          }\n        },\n        // Use multi-process parallel running to improve the build speed\n        // Default number of concurrent runs: os.cpus().length - 1\n        // Disabled on WSL (Windows Subsystem for Linux) due to an issue with Terser\n        // https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\n        parallel: !isWsl,\n        // Enable file caching\n        cache: true,\n        sourceMap: sourcemap\n      }\n    ]);\n\n    /**\n     * 压缩css\n     */\n    config.optimization.minimizer('optimize').use(OptimizeCSSAssetsPlugin, [\n      {\n        cssProcessorOptions: {\n          parser: postcssSafeParser,\n          map: sourcemap\n            ? {\n                // `inline: false` forces the sourcemap to be output into a\n                // separate file\n                inline: false,\n                // `annotation: true` appends the sourceMappingURL to the end of\n                // the css file, helping the browser find the sourcemap\n                annotation: true\n              }\n            : false\n        }\n      }\n    ]);\n\n    /**\n     * 使用chunk.name作为chunk.id，方便区别chunk文件，加强缓存\n     */\n    config.plugin('NamedChunksPlugin').use(NamedChunksPlugin, [\n      (chunk) => {\n        return chunk.name || `chunk-${hash(Array.from(chunk.modulesIterable, (m) => m.id).join('_'))}`;\n      }\n    ]);\n\n    // /**\n    //  * 拷贝public文件夹下的文件\n    //  */\n    // config.plugin('copy').use(CopyWebpackPlugin, [\n    //   [\n    //     {\n    //       from: api.resolve('public'),\n    //       to: '.',\n    //       toType: 'dir'\n    //     }\n    //   ]\n    // ]);\n\n    // /**\n    //  * prefetch配置\n    //  */\n    // config.when(\n    //   Object.keys(pages).find((key) => pages[key].template),\n    //   (config) => {\n    //     config.plugin('prefetch').use(PreloadWebpackPlugin, [\n    //       {\n    //         rel: 'prefetch',\n    //         include: 'asyncChunks'\n    //       }\n    //     ]);\n    //   }\n    // );\n\n    /**\n     * bundle-analyzer插件\n     */\n    config.when(report, (config) => {\n      config.plugin('bundle-analyzer').use(BundleAnalyzerPlugin, [\n        {\n          logLevel: 'warn',\n          analyzerMode: 'static',\n          reportFilename: typeof report === 'string' ? report : '_report.html'\n        }\n      ]);\n    });\n  });\n};\n"],"file":"webpack.config.prod.js"}