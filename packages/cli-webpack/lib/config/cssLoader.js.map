{"version":3,"sources":["../../src/config/cssLoader.js"],"names":["webpackConfig","isProd","sourceMap","filename","chunkFilename","cssPublicPath","cssnanoOptions","preset","mergeLonghand","cssDeclarationSorter","map","inline","createCSSRule","lang","test","loader","options","baseRule","module","rule","use","extractLoader","publicPath","cssLoaderOptions","importLoaders","plugins","require","Object","assign","indentedSyntax","plugin","MiniCssExtractPlugin"],"mappings":"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","sourcesContent":["import MiniCssExtractPlugin, { loader as extractLoader } from 'mini-css-extract-plugin';\n\n/**\n * @param {*} webpackConfig webpack-chain配置对象\n * @param {*} param\n * themes @uyun/less-plugin-themes 主题数据，不传则不启用插件\n * extract 是否分离css为单独文件\n * sourceMap 是否生成sourceMap\n * filename 生成文件路径\n * chunkFilename  生成文件路径\n * publicPath 资源文件路径publicPath，以output文件夹为根路径\n */\nexport default (webpackConfig, { isProd, sourceMap, filename, chunkFilename, cssPublicPath }) => {\n  const cssnanoOptions = {\n    preset: [\n      'default',\n      {\n        mergeLonghand: false,\n        cssDeclarationSorter: false\n      }\n    ]\n  };\n  if (sourceMap) {\n    cssnanoOptions.map = { inline: false };\n  }\n\n  function createCSSRule (lang, test, loader, options) {\n    const baseRule = webpackConfig.module.rule(lang).test(test);\n\n    if (isProd) {\n      baseRule.use('extract-css-loader').loader(extractLoader).options({\n        publicPath: cssPublicPath\n      });\n    } else {\n      baseRule.use('style-loader').loader('style-loader');\n    }\n\n    const cssLoaderOptions = {\n      sourceMap,\n      importLoaders: 2 + (isProd ? 1 : 0) // stylePostLoader injected by vue-loader\n    };\n\n    baseRule.use('css-loader').loader('css-loader').options(cssLoaderOptions);\n\n    if (isProd) {\n      baseRule\n        .use('cssnano')\n        .loader('postcss-loader')\n        .options({\n          sourceMap,\n          plugins: [require('cssnano')(cssnanoOptions)]\n        });\n    }\n\n    baseRule.use('postcss-loader').loader('postcss-loader').options({ sourceMap });\n\n    if (loader) {\n      baseRule.use(loader).loader(loader).options(Object.assign({ sourceMap }, options));\n    }\n  }\n\n  createCSSRule('css', /\\.css$/);\n  createCSSRule('postcss', /\\.p(ost)?css$/);\n  createCSSRule('scss', /\\.scss$/, 'sass-loader');\n  createCSSRule('sass', /\\.sass$/, 'sass-loader', { indentedSyntax: true });\n  createCSSRule('less', /\\.less$/, 'less-loader');\n\n  /**\n   * css 压缩\n   * */\n  if (isProd) {\n    // inject CSS extraction plugin\n    webpackConfig.plugin('extract-css').use(MiniCssExtractPlugin, [{ filename, chunkFilename }]);\n\n    // minify extracted CSS\n    webpackConfig.plugin('optimize-css').use(require('@intervolga/optimize-cssnano-plugin'), [\n      {\n        sourceMap: sourceMap,\n        cssnanoOptions\n      }\n    ]);\n  }\n};\n"],"file":"cssLoader.js"}