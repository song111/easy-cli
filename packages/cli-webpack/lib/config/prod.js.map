{"version":3,"sources":["../../src/config/prod.js"],"names":["api","mode","chainWebpack","webpackConfig","easyConfig","pages","argv","sourcemap","report","isProd","extract","sourceMap","filename","chunkFilename","publicPath","watch","devtool","output","performance","merge","hints","optimization","minimize","minimizer","use","TerserPlugin","terserOptions","parse","ecma","compress","warnings","comparisons","inline","mangle","safari10","comments","ascii_only","parallel","isWsl","cache","OptimizeCSSAssetsPlugin","cssProcessorOptions","parser","postcssSafeParser","map","annotation","plugin","NamedChunksPlugin","chunk","name","Array","from","modulesIterable","m","id","join","CopyWebpackPlugin","resolve","to","toType","when","Object","keys","find","key","template","config","PreloadWebpackPlugin","rel","include","BundleAnalyzerPlugin","logLevel","analyzerMode","reportFilename"],"mappings":"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","sourcesContent":["/* eslint-disable indent */\r\nimport isWsl from 'is-wsl';\r\nimport hash from 'hash-sum';\r\nimport { NamedChunksPlugin } from 'webpack';\r\nimport TerserPlugin from 'terser-webpack-plugin';\r\nimport CopyWebpackPlugin from 'copy-webpack-plugin';\r\nimport postcssSafeParser from 'postcss-safe-parser';\r\nimport PreloadWebpackPlugin from 'preload-webpack-plugin';\r\nimport { BundleAnalyzerPlugin } from 'webpack-bundle-analyzer';\r\nimport OptimizeCSSAssetsPlugin from 'optimize-css-assets-webpack-plugin';\r\nimport cssLoader from './cssLoader';\r\n\r\nexport default (api) => {\r\n  if (api.mode !== 'production') return;\r\n\r\n  api.chainWebpack((webpackConfig) => {\r\n    const { pages = {} } = api.easyConfig;\r\n    const { sourcemap, report } = api.argv;\r\n\r\n    cssLoader(webpackConfig, {\r\n      isProd: false,\r\n      extract: true,\r\n      sourceMap: sourcemap,\r\n      filename: 'static/css/[name].[contenthash:8].css',\r\n      chunkFilename: 'static/css/[id].[contenthash:8].css',\r\n      publicPath: '../../'\r\n    });\r\n\r\n    /**\r\n     * 配置模式与devtool\r\n     * 输出文件名设置\r\n     */\r\n    webpackConfig\r\n      .watch(false)\r\n      .mode('production')\r\n      .devtool(sourcemap ? 'source-map' : false)\r\n      .output.filename('static/js/[name].[contenthash:8].js')\r\n      .chunkFilename('static/js/[name].[contenthash:8].js');\r\n\r\n    /**\r\n     * 不输出优化提示\r\n     */\r\n    webpackConfig.performance.merge({\r\n      hints: false\r\n    });\r\n\r\n    /**\r\n     * 设置压缩代码\r\n     */\r\n    webpackConfig.optimization.minimize(true);\r\n\r\n    /**\r\n     * 压缩js\r\n     */\r\n    webpackConfig.optimization.minimizer('terser').use(TerserPlugin, [\r\n      {\r\n        terserOptions: {\r\n          parse: {\r\n            // we want terser to parse ecma 8 code. However, we don't want it\r\n            // to apply any minfication steps that turns valid ecma 5 code\r\n            // into invalid ecma 5 code. This is why the 'compress' and 'output'\r\n            // sections only apply transformations that are ecma 5 safe\r\n            // https://github.com/facebook/create-react-app/pull/4234\r\n            ecma: 8\r\n          },\r\n          compress: {\r\n            ecma: 5,\r\n            warnings: false,\r\n            // Disabled because of an issue with Uglify breaking seemingly valid code:\r\n            // https://github.com/facebook/create-react-app/issues/2376\r\n            // Pending further investigation:\r\n            // https://github.com/mishoo/UglifyJS2/issues/2011\r\n            comparisons: false,\r\n            // Disabled because of an issue with Terser breaking valid code:\r\n            // https://github.com/facebook/create-react-app/issues/5250\r\n            // Pending futher investigation:\r\n            // https://github.com/terser-js/terser/issues/120\r\n            inline: 2\r\n          },\r\n          mangle: {\r\n            safari10: true\r\n          },\r\n          output: {\r\n            ecma: 5,\r\n            comments: false,\r\n            // Turned on because emoji and regex is not minified properly using default\r\n            // https://github.com/facebook/create-react-app/issues/2488\r\n            ascii_only: true\r\n          }\r\n        },\r\n        // Use multi-process parallel running to improve the build speed\r\n        // Default number of concurrent runs: os.cpus().length - 1\r\n        // Disabled on WSL (Windows Subsystem for Linux) due to an issue with Terser\r\n        // https://github.com/webpack-contrib/terser-webpack-plugin/issues/21\r\n        parallel: !isWsl,\r\n        // Enable file caching\r\n        cache: true,\r\n        sourceMap: sourcemap\r\n      }\r\n    ]);\r\n\r\n    /**\r\n     * 压缩css\r\n     */\r\n    webpackConfig.optimization.minimizer('optimize').use(OptimizeCSSAssetsPlugin, [\r\n      {\r\n        cssProcessorOptions: {\r\n          parser: postcssSafeParser,\r\n          map: sourcemap\r\n            ? {\r\n                // `inline: false` forces the sourcemap to be output into a\r\n                // separate file\r\n                inline: false,\r\n                // `annotation: true` appends the sourceMappingURL to the end of\r\n                // the css file, helping the browser find the sourcemap\r\n                annotation: true\r\n              }\r\n            : false\r\n        }\r\n      }\r\n    ]);\r\n\r\n    /**\r\n     * 使用chunk.name作为chunk.id，方便区别chunk文件，加强缓存\r\n     */\r\n    webpackConfig.plugin('NamedChunksPlugin').use(NamedChunksPlugin, [\r\n      (chunk) => {\r\n        return chunk.name || `chunk-${hash(Array.from(chunk.modulesIterable, (m) => m.id).join('_'))}`;\r\n      }\r\n    ]);\r\n\r\n    /**\r\n     * 拷贝public文件夹下的文件\r\n     */\r\n    webpackConfig.plugin('copy').use(CopyWebpackPlugin, [\r\n      [\r\n        {\r\n          from: api.resolve('public'),\r\n          to: '.',\r\n          toType: 'dir'\r\n        }\r\n      ]\r\n    ]);\r\n\r\n    /**\r\n     * prefetch配置\r\n     */\r\n    webpackConfig.when(\r\n      Object.keys(pages).find((key) => pages[key].template),\r\n      (config) => {\r\n        config.plugin('prefetch').use(PreloadWebpackPlugin, [\r\n          {\r\n            rel: 'prefetch',\r\n            include: 'asyncChunks'\r\n          }\r\n        ]);\r\n      }\r\n    );\r\n\r\n    /**\r\n     * bundle-analyzer插件\r\n     */\r\n    webpackConfig.when(report, (config) => {\r\n      config.plugin('bundle-analyzer').use(BundleAnalyzerPlugin, [\r\n        {\r\n          logLevel: 'warn',\r\n          analyzerMode: 'static',\r\n          reportFilename: typeof report === 'string' ? report : '_report.html'\r\n        }\r\n      ]);\r\n    });\r\n  });\r\n};\r\n"],"file":"prod.js"}